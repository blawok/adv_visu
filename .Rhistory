# read data
train <- read_csv("./data/clean_reddit_df.csv")
# old was made from c555x4 and c2spc2
train <- train[which(train$thread_id == "ccednx"), ]  #  | train$thread_id == "elku7e"
txt <- paste(train$clean_body)
# pre-processing
txt <- gsub("'", "", txt)  # remove apostrophes
txt <- gsub("[[:punct:]]", " ", txt)  # replace punctuation with space
txt <- gsub("[[:cntrl:]]", " ", txt)  # replace control characters with space
txt <- gsub("^[[:space:]]+", "", txt) # remove whitespace at beginning of documents
txt <- gsub("[[:space:]]+$", "", txt) # remove whitespace at end of documents
txt <- tolower(txt)  # force to lowercase
# tokenize on space and output as a list:
doc.list <- strsplit(txt, "[[:space:]]+")
# compute the table of terms:
term.table <- table(unlist(doc.list))
term.table <- sort(term.table, decreasing = TRUE)
# stop words
stop_words <- c(stopwords("english"), c("s", "t", "r", "f", "m", "d", "u"))
# remove terms that are stop words or occur fewer than 5 times:
del <- names(term.table) %in% stop_words | term.table < 5
term.table <- term.table[!del]
vocab <- names(term.table)
# now put the documents into the format required by the lda package:
get.terms <- function(x) {
index <- match(x, vocab)
index <- index[!is.na(index)]
rbind(as.integer(index - 1), as.integer(rep(1, length(index))))
}
documents <- lapply(doc.list, get.terms)
# Compute some statistics related to the data set:
D <- length(documents)
W <- length(vocab)
doc.length <- sapply(documents, function(x) sum(x[2, ]))
N <- sum(doc.length)
term.frequency <- as.integer(term.table)
# MCMC and model tuning parameters:
K <- 5    # 4
G <- 2000
alpha <- 0.01
eta <- 0.01
set.seed(357)
t1 <- Sys.time()
fit <- lda.collapsed.gibbs.sampler(documents = documents, K = K, vocab = vocab,
num.iterations = G, alpha = alpha,
eta = eta, initial = NULL, burnin = 0,
compute.log.likelihood = TRUE)
t2 <- Sys.time()
t2 - t1
### Visualizing the fitted model with LDAvis
theta <- t(apply(fit$document_sums + alpha, 2, function(x) x/sum(x)))
phi <- t(apply(t(fit$topics) + eta, 2, function(x) x/sum(x)))
results <- list(phi = phi,
theta = theta,
doc.length = doc.length,
vocab = vocab,
term.frequency = term.frequency)
# create the JSON object to feed the visualization:
json <- createJSON(phi = results$phi,
theta = results$theta,
doc.length = results$doc.length,
vocab = results$vocab,
term.frequency = results$term.frequency)
save(results, file = "./objects/LDAVis_congress.RData")
rm(results)
runApp('app_shiny.R')
theta <- t(apply(fit$document_sums + alpha, 2, function(x) x/sum(x)))
phi <- t(apply(t(fit$topics) + eta, 2, function(x) x/sum(x)))
results2 <- list(phi = phi,
theta = theta,
doc.length = doc.length,
vocab = vocab,
term.frequency = term.frequency)
# create the JSON object to feed the visualization:
json <- createJSON(phi = results$phi,
theta = results$theta,
doc.length = results$doc.length,
vocab = results$vocab,
term.frequency = results$term.frequency)
results2 <- list(phi = phi,
theta = theta,
doc.length = doc.length,
vocab = vocab,
term.frequency = term.frequency)
results2 <- list(phi = phi,
theta = theta,
doc.length = doc.length,
vocab = vocab,
term.frequency = term.frequency)
save(results2, file = "./objects/LDAVis_congress.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram <- plot_ly(x=~sentiment$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment, file = "objects/sentiment_timestamp.RData")
save(sentiment_histogram, file = "objects/sentiment_histogram.RData")
load("objects/sentiment_timestamp.RData")
load("objects/sentiment_histogram.RData")
sentiment_histogram
### daily data
daily_sentiment <- read_csv('data/daily_sentiment.csv')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
daily_sentiment_histogram <- plot_ly(x=~daily_sentiment$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
### timestamp data
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram <- plot_ly(x=~sentiment$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
sentiment_histogram
load("objects/sentiment_histogram.RData")
sentiment_histogram
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment <- filter(sentiment, sentiment$thread_id == 'ej95ak')
sentiment_histogram
load("objects/sentiment_timestamp.RData")
load("objects/sentiment_histogram.RData")
sentiment_histogram
shiny::runApp()
runApp('app_shiny.R')
runApp('app_shiny.R')
library(shiny); runApp('app_shiny.R')
runApp('app_shiny.R')
load("objects/sentiment_timestamp.RData")
load("objects/sentiment_histogram.RData")
sentiment_histogram
runApp('app_shiny.R')
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_new <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
library(ggplot2)
library(dplyr)
library(plotly)
library(readr)
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
sentiment_new
sentiment_new <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
sentiment_histogram_new
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_old <- filter(sentiment, sentiment$thread_id == 'c35akk')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_old <- plot_ly(x=~sentiment_old$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
sentiment_histogram_old
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
runApp('app_shiny.R')
save(sentiment_old, file = "objects/sentiment_timestamp_old.RData")
save(sentiment_histogram_old, file = "objects/sentiment_histogram_old.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_new <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
runApp('app_shiny.R')
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
save(sentiment, file = "objects/sentiment.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_new <- filter(sentiment, sentiment$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment, file = "objects/sentiment.RData")
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
load("objects/sentiment.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
### timestamp data
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_old <- filter(sentiment, sentiment$thread_id == 'c35akk')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_old <- plot_ly(x=~sentiment_old$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment, file = "objects/sentiment.RData")
save(sentiment_old, file = "objects/sentiment_timestamp_old.RData")
save(sentiment_histogram_old, file = "objects/sentiment_histogram_old.RData")
load("objects/sentiment.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
sentiment_histogram_old
runApp('app_shiny.R')
runApp('app_shiny.R')
load("objects/sentiment_histogram_new.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
sentiment_histogram_old
load("objects/sentiment.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
sentiment_n <- read_csv('data/df_with_sentiment_timestamp.csv')
sentiment_new <- filter(sentiment_n, sentiment_n$thread_id == 'ej95ak')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
sentiment_histogram_new
save(sentiment_n, file = "objects/sentiment_n.RData")
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
load("objects/sentiment.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
sentiment_o <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_old <- filter(sentiment_o, sentiment_o$thread_id == 'c35akk')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_old <- plot_ly(x=~sentiment_old$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
sentiment_histogram_old
save(sentiment_o, file = "objects/sentiment_o.RData")
save(sentiment_old, file = "objects/sentiment_timestamp_old.RData")
save(sentiment_histogram_old, file = "objects/sentiment_histogram_old.RData")
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
sentiment_histogram_old
runApp('app_shiny.R')
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
load("objects/sentiment_histogram_old.RData")
sentiment_histogram_old
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
sentiment_histogram_old
runApp('app_shiny.R')
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
sentiment_o <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_old <- filter(sentiment_o, sentiment_o$thread_id == 'c35akk')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_old <- plot_ly(x=~sentiment_old$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment_o,sentiment_old,sentiment_histogram_old, file ='objects/sent_hist_old.RData')
load("objects/sent_hist_old.RData")
sentiment_histogram_old
runApp('app_shiny.R')
runApp('app_shiny.R')
load("objects/sent_hist_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
saveRDS(sentiment_o,sentiment_old,sentiment_histogram_old, file = 'objects/sent_hist_old.rds')
readRDS('objects/sent_hist_old.rds')
sentiment_o <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_old <- filter(sentiment_o, sentiment_o$thread_id == 'c35akk')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_old <- plot_ly(x=~sentiment_old$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
saveRDS(sentiment_o, file = 'objects/sentiment_o.rds')
saveRDS(sentiment_old, file = 'objects/sentiment_old.rds')
saveRDS(sentiment_histogram_old, file = 'objects/sentiment_hist_old.rds')
readRDS('objects/sent_hist_old.rds')
readRDS('objects/sentiment_old.rds')
readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
readRDS('objects/sent_hist_old.rds')
readRDS('objects/sentiment_o.rds')
readRDS('objects/sentiment_old.rds')
readRDS('objects/sentiment_hist_old.rds')
sentiment_o <- readRDS('objects/sentiment_o.rds')
sentiment_old <- readRDS('objects/sentiment_old.rds')
sentiment_histogram_old <- readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
saveRDS(sentiment_o, file = 'objects/sentiment_o.rds')
saveRDS(sentiment_old, file = 'objects/sentiment_old.rds')
saveRDS(sentiment_histogram_old, file = 'objects/sentiment_hist_old.rds')
sentiment_o <- readRDS('objects/sentiment_o.rds')
sentiment_old <- readRDS('objects/sentiment_old.rds')
sentiment_histogram_old <- readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
runApp('app_shiny.R')
sentiment_o <- readRDS('objects/sentiment_o.rds')
sentiment_old <- readRDS('objects/sentiment_old.rds')
sentiment_histogram_old <- readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
sentiment_old <- readRDS('objects/sentiment_old.rds')
sentiment_histogram_old <- readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
runApp('app_shiny.R')
sentiment_old <- readRDS('objects/sentiment_old.rds')
sentiment_histogram_old <- readRDS('objects/sentiment_hist_old.rds')
sentiment_histogram_old
runApp('app_shiny.R')
sentiment_old <- readRDS('objects/sentiment_old.rds')
source(readRDS('objects/sentiment_old.rds'))
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
wordcloud <- plot_wordcloud(file_id = 'ccednx',
use_image = FALSE)
wordcloud
runApp('app_shiny.R')
runApp('app_shiny.R')
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
sentiment_histogram_new
runApp('app_shiny.R')
sentiment_n <- read_csv('data/df_with_sentiment_timestamp.csv')
# choosing only posts from specific thread
sentiment_new <- filter(sentiment_n, sentiment_n$thread_id == 'ej7ykn')
a <- list(
title = "Sentiment",
range = c(-1, 1)
)
sentiment_histogram_new <- plot_ly(x=~sentiment_new$ave_sentiment,
type = "histogram",
histnorm = "probability",
alpha = 0.8) %>% layout(xaxis = a)
save(sentiment_n, file = "objects/sentiment_n.RData")
save(sentiment_new, file = "objects/sentiment_timestamp_new.RData")
save(sentiment_histogram_new, file = "objects/sentiment_histogram_new.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
sentiment_histogram_new
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
prepare_data_for_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej7ykn',
use_filtred_data = FALSE)
load(paste("objects/",'ej7ykn',"_text_corpus.RData", sep=""))
wordcloud2(data = textCorpus,backgroundColor="white")
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
wordcloud_new <- plot_wordcloud(file_id = 'ej7ykn',
use_image = FALSE)
runApp('app_shiny.R')
df <- read.csv('data/clean_reddit_df.csv', sep=",", encoding="UTF-8")
# if (use_filtred_data) {
df <- filter(df, df$thread_id == 'ej7ykn')
text <- str_c(df$clean_body, collapse = "")
# Convert the data into a summary table
textCorpus <-
Corpus(VectorSource(text)) %>%
TermDocumentMatrix() %>%
as.matrix()
textCorpus <- sort(rowSums(textCorpus), decreasing=TRUE)
textCorpus <- data.frame(word = names(textCorpus),
freq=textCorpus,
row.names = NULL)
save(textCorpus, file = paste("objects/", 'ej7ykn', "_text_corpus.RData", sep=""))
load(paste("objects/",'ej7ykn',"_text_corpus.RData", sep=""))
wordcloud2(data = textCorpus,backgroundColor="white")
load("objects/sentiment_o.RData")
load("objects/sentiment_timestamp_old.RData")
load("objects/sentiment_histogram_old.RData")
load("objects/sentiment_n.RData")
load("objects/sentiment_timestamp_new.RData")
load("objects/sentiment_histogram_new.RData")
runApp('app_shiny.R')
runApp('app_shiny.R')
load(paste("objects/",'ej7ykn',"_text_corpus.RData", sep=""))
wordcloud2(data = textCorpus,backgroundColor="white")
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
getwd()
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
runApp('app_shiny.R')
s
