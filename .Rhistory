source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
wordcloud
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ej95ak.csv',
dest_text_file_path = 'data/ej95ak_clean_file.txt')
df <- read.csv('data/data_scrape/ej95ak.csv', sep="\t", encoding="UTF-8")
View(df)
text <- str_c(df$body, collapse = "")
text <- removeWords(stopwords("english"), text)
Encoding(text)
df <- read.csv('data/data_scrape/ej95ak.csv',
sep="\t",
encoding="UTF-8")
text <- str_c(df$body, collapse = "")
Encoding(text)
text <- removeWords(stopwords("english"), text)
df <- read.csv('data/data_scrape/ej95ak.csv',
sep="\t")
text <- str_c(df$body, collapse = "")
Encoding(text)
text <- removeWords(stopwords("english"), text)
library(tidytext)
text <- text %>%
anti_join(stop_words, by = c("word" = "word"))
tidy_documents <- tidy_documents %>%
filter(!word %in% stop_words$word)
text <- text %>%
filter(!word %in% stop_words$word)
df <- read.csv('data/data_scrape/ej95ak.csv',
sep="\t", encoding='UTF-8')
text <- str_c(df$body, collapse = "")
Encoding(text)
text <- removeWords(stopwords("english"), text)
df <- read.csv('data/data_scrape/ej95ak.csv',
sep="\t",encoding = "Latin-1")
text <- str_c(df$body, collapse = "")
Encoding(text)
text <- removeWords(stopwords("english"), text)
df <- read.csv2('data/data_scrape/ej95ak.csv',
sep="\t",encoding = "UTF-8")
_c
text <- str_c(df$body, collapse = "")
Encoding(text)
text <- removeWords(stopwords("english"), text)
library(tidyverse)
library(tidytext)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(tidytext)
df <- read.csv2('data/data_scrape/ekad1u.csv',
sep="\t",encoding = "UTF-8")
text <- str_c(df$body, collapse = "")
library(tm)
text <- str_c(df$body, collapse = "")
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ekad1u.csv',
dest_text_file_path = 'data/ekad1u_clean_file.txt')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = FALSE,
df_path = 'data/data_scrape/ekad1u.csv',
dest_text_file_path = 'data/ekad1u_clean_file.txt')
wordcloud
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(use_default = TRUE,
df_path = 'data/data_backup/ej95ak_clean_file.txt')
wordcloud
df <- read.csv('data/clean_reddit_df.csv', sep=",", encoding="UTF-8")
View(df)
df <- df %>% filter(., df$thread_id == 'ej95ak')
df <- read.csv('data/clean_reddit_df.csv', sep=",", encoding="UTF-8")
filter(df, df$thread_id == 'ej95ak')
library(dplyr)
filter(df, df$thread_id == 'ej95ak')
df2 <- filter(df, df$thread_id == 'ej95ak')
View(df2)
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej95ak')
source('functions/wordclouds_functions.R')
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej95ak')
wordcloud
source('functions/wordclouds_functions.R')
# WORDCLOUD FOR ALL DATA
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej95ak',
use_filtred_data = FALSE)
source('functions/wordclouds_functions.R')
# WORDCLOUD FOR ALL DATA
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej95ak',
use_filtred_data = FALSE)
wordcloud
source('functions/wordclouds_functions.R')
# WORDCLOUD FOR ALL DATA
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
thread_id = 'ej95ak',
use_filtred_data = FALSE)
source('functions/wordclouds_functions.R')
# WORDCLOUD FOR ALL DATA
wordcloud <- plot_wordcloud(df_path = 'data/clean_reddit_df.csv',
use_filtred_data = FALSE)
wordcloud
sentiment <- read_csv('df_with_sentiment_timestamp.csv', sep=',')
daily_sentiment <- read_csv('daily_sentiment.csv', sep=',')
sentiment <- read_csv2('df_with_sentiment_timestamp.csv', sep=',')
daily_sentiment <- read_csv2('daily_sentiment.csv', sep=',')
sentiment <- read_csv('df_with_sentiment_timestamp.csv', sep=",")
sentiment <- read_csv('df_with_sentiment_timestamp.csv')
sentiment <- read_csv('data/df_with_sentiment_timestamp.csv')
View(sentiment)
daily_sentiment <- read_csv('daily_sentiment.csv')
daily_sentiment <- read_csv('data/daily_sentiment.csv')
View(daily_sentiment)
source('functions/sentiment_functions.R')
plot_hist_sentiment(sentiment)
View(sentiment)
source('functions/sentiment_functions.R')
plot_hist_sentiment(sentiment)
View(daily_sentiment)
View(sentiment)
ggplot(sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(sentiment, aes(x = ave_sentiment)) +
geom_histogram() +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(sentiment$ave_sentiment, na.rm = TRUE)))
source('functions/sentiment_functions.R')
plot_hist_sentiment(sentiment, ave_sentiment)
plot_hist_sentiment(sentiment, by = ave_sentiment)
ggplot(sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(daily_sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(daily_sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(daily_sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(daily_sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..), bins = 10) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(daily_sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(daily_sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(daily_sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..), bins = 15) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(daily_sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(daily_sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(daily_sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..), bins = 30) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(daily_sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(daily_sentiment$ave_sentiment, na.rm = TRUE)))
ggplot(daily_sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..), bins = 50) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(daily_sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(daily_sentiment$ave_sentiment, na.rm = TRUE)))
sentiment <- filter(sentiment, sentiment$thread_id == 'ej95ak')
ggplot(sentiment, aes(x = ave_sentiment)) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun = dnorm, colour = "red",
arg = list(mean = mean(sentiment$ave_sentiment, na.rm = TRUE),
sd = sd(sentiment$ave_sentiment, na.rm = TRUE)))
library(plotly)
install.packages('plotly')
library(plotly)
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# install.packages('dplyr')
library(dplyr)
library(plotly)
p <- plot_ly(x = ~rnorm(50), type = "histogram")
library(plotly)
p <- plot_ly(x = ~rnorm(50), type = "histogram")
remove.packages(c('dplyr', 'plotly'))
install.packages('dplyr', dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
install.packages('plotly', dependencies = TRUE)
install.packages("plotly", dependencies = TRUE)
library(plotly)
