yaxis = list(
title = "Sentiment value",
range = c(-0.7,0.7),
zeroline = F
),
xaxis = list(
title = "Day",
range = c(0,72),
zeroline = F,
showgrid = F
)
) %>%
animation_opts(
frame = 30,
transition = 10,
redraw = FALSE
) %>%
animation_slider(
currentvalue = list(
prefix = "Day "
)
)
p2
load(file = "../objects/corr_plot.RData")
correlation_plot
load(file = "../objects/corr_plot.RData")
correlation_plot
z <- read.zoo("merged_indices.csv", sep=",", header = TRUE, tz = "")
data_x <- as.xts(z)
df_x <- data.frame(data_x)
df_x <- cbind(date_time = rownames(df_x), df_x)
df_x$ID <- seq.int(nrow(df_x))
df_x_acc <- df_x %>%
accumulateBy(~ID)
# write.zoo(data_x,file="merged_indices.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
r <- read.zoo("reddit_xts.csv", sep=",", header = TRUE, tz = "")
data_r <- as.xts(r)
df_r <- data.frame(data_r)
df_r <- cbind(date_time = rownames(df_r), df_r)
df_r$ID <- seq.int(nrow(df_r))
df_r_acc <- df_r %>%
accumulateBy(~ID)
library(xts)
z <- read.zoo("merged_indices.csv", sep=",", header = TRUE, tz = "")
data_x <- as.xts(z)
df_x <- data.frame(data_x)
df_x <- cbind(date_time = rownames(df_x), df_x)
df_x$ID <- seq.int(nrow(df_x))
df_x_acc <- df_x %>%
accumulateBy(~ID)
# write.zoo(data_x,file="merged_indices.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
r <- read.zoo("reddit_xts.csv", sep=",", header = TRUE, tz = "")
data_r <- as.xts(r)
df_r <- data.frame(data_r)
df_r <- cbind(date_time = rownames(df_r), df_r)
df_r$ID <- seq.int(nrow(df_r))
df_r_acc <- df_r %>%
accumulateBy(~ID)
library(dplyr)
library(quantmod)
z <- read.zoo("merged_indices.csv", sep=",", header = TRUE, tz = "")
data_x <- as.xts(z)
df_x <- data.frame(data_x)
df_x <- cbind(date_time = rownames(df_x), df_x)
df_x$ID <- seq.int(nrow(df_x))
df_x_acc <- df_x %>%
accumulateBy(~ID)
# write.zoo(data_x,file="merged_indices.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
r <- read.zoo("reddit_xts.csv", sep=",", header = TRUE, tz = "")
data_r <- as.xts(r)
df_r <- data.frame(data_r)
df_r <- cbind(date_time = rownames(df_r), df_r)
df_r$ID <- seq.int(nrow(df_r))
df_r_acc <- df_r %>%
accumulateBy(~ID)
load(file = "../objects/corr_plot.RData")
correlation_plot
update.packages("plotly")
remove.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
load(file = "../objects/corr_plot.RData")
correlation_plot
save(dfm, file = "../objects/dfm.RData")
save(dfm_small, file = "../objects/dfm_small.RData")
version
source("functions_thor.R")
xts1 <- csvToXTS("merged_indices.csv")
library(xts)
xts1 <- csvToXTS("merged_indices.csv")
index(xts1) <- round(index(xts1), "days")
xts_reddit <- csvToXTS("reddit_sentiment.csv")
xts_reddit <- apply.daily(xts_reddit, sum)
colnames(xts_reddit) <- c("Sentiment")
xts_merged <- merge.xts(xts1, xts_reddit) %>%
na.locf(.) %>%
na.omit()
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
df <- data.frame(xts_file)
df <- cbind(date_time = rownames(df), df)
dfm <- xtsToDF(xts_merged)
dfm_small <- xtsToDF(xts_merged_small)
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE, shareY = FALSE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019",
xaxis = list(
type = "Date",
tickformat = "%Y-%m"
))
return (p)
}
rm(plotMultiple())
rm(plotMultiple)
source()
source("functions_thor.R")
plotMultiple(dfm, "GE", "ZG", "LMT")
source("functions_thor.R")
plotMultiple(dfm, "GE", "ZG", "LMT")
source("functions_thor.R")
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm, "GE", "ZG", "LMT")
View(dfm)
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE, shareY = FALSE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019",
xaxis = list(
type = "Date",
tickformat = "%Y-%m"
))
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE, shareY = FALSE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019"
)
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm_small, "GE", "HAL", "Sentiment")
plotMultiple(dfm, "GE", "ZG", "LMT")
str(dfm)
str(dfm_small)
unique(dfm$date_time)
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019",
xaxis = list(
type = "Date",
tickformat = "%Y-%m"
))
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm_small, "GE", "HAL", "Sentiment")
View(dfm)
View(dfm_small)
str(dfm)
str(dfm_small)
sum(dfm)
summary(dfm)
summary(dfm_small)
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
# transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019",
xaxis = list(
type = "Date",
tickformat = "%Y-%m"
))
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
# transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2"
# yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019",
xaxis = list(
type = "Date",
tickformat = "%Y-%m"
))
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
rm(plotMultiple)
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019")
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
source("functions_thor.R")
xts1 <- csvToXTS("merged_indices.csv")
index(xts1) <- round(index(xts1), "days")
xts_reddit <- csvToXTS("reddit_sentiment.csv")
xts_reddit <- apply.daily(xts_reddit, sum)
colnames(xts_reddit) <- c("Sentiment")
# write.zoo(xts_reddit,file="reddit_xts.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
xts_merged <- merge.xts(xts1, xts_reddit) %>%
na.locf(.) %>%
na.omit()
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
# xtsToDF <- function(xts_file) {
df <- data.frame(xts_file)
df <- cbind(date_time = rownames(df), df)
df$ID <- seq.int(nrow(df))
names(df) <- gsub(".Open", "", names(df), fixed = TRUE)
return (df)
}
dfm <- xtsToDF(xts_merged)
dfm_small <- xtsToDF(xts_merged_small)
View(xts_merged)
dfm <- xtsToDF(xts_merged)
source("functions_thor.R")
# Getting Reddit csv to work
# prepareReddit <- function(file_name = "../data/daily_sentiment.csv") {
#   df_redd <- read.csv(file_name)
#   df_redd$date <- as.Date(df_redd$date)
#   df_redd$date <- as.POSIXct(strptime(df_redd$date, "%Y-%m-%d"))
#   df_redd$ave_sentiment <- as.numeric(as.character(df_redd$ave_sentiment))
#   df_redd$X <- NULL
#   qxts <- xts(df_redd[,2], order.by=df_redd[,1])
#   write.zoo(qxts,file="reddit_sentiment.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
# }
# accumulateBy <- function(dat, var) {
#   var <- lazyeval::f_eval(var, dat)
#   lvls <- plotly:::getLevels(var)
#   dats <- lapply(seq_along(lvls), function(x) {
#     cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
#   })
#   dplyr::bind_rows(dats)
# }
# csvToXTS <- function(csv_file){
#
#   zoo_file <- read.zoo(csv_file, sep=",", header = TRUE, tz = "")
#   xts_file <- as.xts(zoo_file)
#
#   return(xts_file)
# }
xts1 <- csvToXTS("merged_indices.csv")
index(xts1) <- round(index(xts1), "days")
xts_reddit <- csvToXTS("reddit_sentiment.csv")
xts_reddit <- apply.daily(xts_reddit, sum)
colnames(xts_reddit) <- c("Sentiment")
# write.zoo(xts_reddit,file="reddit_xts.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
xts_merged <- merge.xts(xts1, xts_reddit) %>%
na.locf(.) %>%
na.omit()
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
# xtsToDF <- function(xts_file) {
#
#   df <- data.frame(xts_file)
#   df <- cbind(date_time = rownames(df), df)
#   df$ID <- seq.int(nrow(df))
#
#   names(df) <- gsub(".Open", "", names(df), fixed = TRUE)
#
#   return (df)
# }
dfm <- xtsToDF(xts_merged)
dfm_small <- xtsToDF(xts_merged_small)
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm_small, "GE", "HAL", "Sentiment")
View(xts_merged)
library(dplyr)
plotMultiple(dfm, "GE", "ZG", "LMT")
source("functions_thor.R")
# Getting Reddit csv to work
# prepareReddit <- function(file_name = "../data/daily_sentiment.csv") {
#   df_redd <- read.csv(file_name)
#   df_redd$date <- as.Date(df_redd$date)
#   df_redd$date <- as.POSIXct(strptime(df_redd$date, "%Y-%m-%d"))
#   df_redd$ave_sentiment <- as.numeric(as.character(df_redd$ave_sentiment))
#   df_redd$X <- NULL
#   qxts <- xts(df_redd[,2], order.by=df_redd[,1])
#   write.zoo(qxts,file="reddit_sentiment.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
# }
# accumulateBy <- function(dat, var) {
#   var <- lazyeval::f_eval(var, dat)
#   lvls <- plotly:::getLevels(var)
#   dats <- lapply(seq_along(lvls), function(x) {
#     cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
#   })
#   dplyr::bind_rows(dats)
# }
# csvToXTS <- function(csv_file){
#
#   zoo_file <- read.zoo(csv_file, sep=",", header = TRUE, tz = "")
#   xts_file <- as.xts(zoo_file)
#
#   return(xts_file)
# }
xts1 <- csvToXTS("merged_indices.csv")
index(xts1) <- round(index(xts1), "days")
xts_reddit <- csvToXTS("reddit_sentiment.csv")
xts_reddit <- apply.daily(xts_reddit, sum)
colnames(xts_reddit) <- c("Sentiment")
# write.zoo(xts_reddit,file="reddit_xts.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
xts_merged <- merge.xts(xts1, xts_reddit) %>%
na.locf(.) %>%
na.omit()
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
# xtsToDF <- function(xts_file) {
#
#   df <- data.frame(xts_file)
#   df <- cbind(date_time = rownames(df), df)
#   df$ID <- seq.int(nrow(df))
#
#   names(df) <- gsub(".Open", "", names(df), fixed = TRUE)
#
#   return (df)
# }
dfm <- xtsToDF(xts_merged)
dfm_small <- xtsToDF(xts_merged_small)
plotMultiple(dfm, "GE", "ZG", "LMT")
source("functions_thor.R")
# Getting Reddit csv to work
# prepareReddit <- function(file_name = "../data/daily_sentiment.csv") {
#   df_redd <- read.csv(file_name)
#   df_redd$date <- as.Date(df_redd$date)
#   df_redd$date <- as.POSIXct(strptime(df_redd$date, "%Y-%m-%d"))
#   df_redd$ave_sentiment <- as.numeric(as.character(df_redd$ave_sentiment))
#   df_redd$X <- NULL
#   qxts <- xts(df_redd[,2], order.by=df_redd[,1])
#   write.zoo(qxts,file="reddit_sentiment.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
# }
# accumulateBy <- function(dat, var) {
#   var <- lazyeval::f_eval(var, dat)
#   lvls <- plotly:::getLevels(var)
#   dats <- lapply(seq_along(lvls), function(x) {
#     cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
#   })
#   dplyr::bind_rows(dats)
# }
# csvToXTS <- function(csv_file){
#
#   zoo_file <- read.zoo(csv_file, sep=",", header = TRUE, tz = "")
#   xts_file <- as.xts(zoo_file)
#
#   return(xts_file)
# }
xts1 <- csvToXTS("merged_indices.csv")
index(xts1) <- round(index(xts1), "days")
xts_reddit <- csvToXTS("reddit_sentiment.csv")
xts_reddit <- apply.daily(xts_reddit, sum)
colnames(xts_reddit) <- c("Sentiment")
# write.zoo(xts_reddit,file="reddit_xts.csv",index.name="date",row.names=FALSE,col.names=TRUE,sep=",")
xts_merged <- merge.xts(xts1, xts_reddit) %>%
na.locf(.) %>%
na.omit()
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
# xtsToDF <- function(xts_file) {
#
#   df <- data.frame(xts_file)
#   df <- cbind(date_time = rownames(df), df)
#   df$ID <- seq.int(nrow(df))
#
#   names(df) <- gsub(".Open", "", names(df), fixed = TRUE)
#
#   return (df)
# }
dfm <- xtsToDF(xts_merged)
dfm_small <- xtsToDF(xts_merged_small)
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019")
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple <- function(df_file, index_1, index_2, index_3) {
p <- df_file %>%
select(., date_time, index_1, index_2, index_3) %>%
pivot_longer(-date_time, names_to = "variable", values_to = "value") %>%
transform(id = as.integer(factor(variable))) %>%
plot_ly(.,
x = ~date_time,
y = ~value,
color = ~variable,
colors = "Dark2",
yaxis = ~paste0("y", id)
) %>%
add_lines() %>%
subplot(nrows = 3, shareX = TRUE) %>%
layout(
title = "Prices of 3 chosen indices since June 2019")
return (p)
}
plotMultiple(dfm, "GE", "ZG", "LMT")
plotMultiple(dfm_small, "GE", "HAL", "Sentiment")
xts_merged <- na.locf(xts_merged)
dfm <- xtsToDF(xts_merged)
plotMultiple(dfm, "GE", "ZG", "LMT")
xts_merged_small <- merge.xts(xts1, xts_reddit) %>%
na.omit()
dfm_small <- xtsToDF(xts_merged_small)
plotMultiple(dfm_small, "GE", "HAL", "Sentiment")
plotMultiple(dfm, "GE", "ZG", "Sentiment")
plotMultiple(dfm, "GE", "HAL", "Sentiment")
dfm <- xtsToDF(xts1)
plotMultiple(dfm, "GE", "ZG", "LMT")
